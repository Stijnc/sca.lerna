name: Publish

on:
  pull_request:
    types: [closed]
    branches:
      - development
      - main
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  publish:
    #if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: "Use NodeJS 14"
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: "Version and publish"
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh
      run: |
        write-host "upgrading bicep"
        az bicep upgrade
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor}}@users.noreply.github.com"

        #get all changed files
        $changedFiles = lerna changed

        #version the packages
        if ("${{ github.base_ref }}" -eq 'development') {
          lerna version --conventional-commits --conventional-prerelease --preid beta --yes --no-git-tag-version
        }
        else {
          lerna version --conventional-commits --conventional-graduate --yes --no-git-tag-version
        }
        git commit --allow-empty -m "[skip ci] creating release"

        #publish the packages
        $PackageList = $null;
        $PackageList +=  $changedFiles | % { ConvertFrom-Json $(get-content  $(Join-Path -Path "modules" -ChildPath $(Join-Path -Path $_ -ChildPath "package.json")) -raw ) }
        $PackageList | % {az bicep publish --file $("modules/{0}/{0}.bicep"-f $_.name) --target $("br:{0}/bicep/modules/{1}:v{2}" -f "scabicep.azurecr.io", $_.name, $_.version) }

        
